From 378dfc77d62e5c66680e8c43bac52c22e3660de2 Mon Sep 17 00:00:00 2001
From: marionm <mathis.marion@grenoble-inp.org>
Date: Fri, 14 Jan 2022 09:17:45 +0100
Subject: [PATCH] Compatibility for newer kernels

---
 patches/adc-lib.diff                |  12 ++
 patches/fmc-adc-100m14b4cha-sw.diff | 154 ++++++++++++++++++
 patches/fmc-sw.diff                 |  71 +++++++--
 patches/general-cores.diff          | 136 ++++++++++++++++
 patches/mock-turtle.diff            | 107 +++++++++++++
 patches/spec.diff                   | 238 ++++++++++++++++++++++++++++
 patches/wrtd.diff                   |  24 +++
 patches/zio.diff                    |  39 +++++
 scripts/adc_lib_build.sh            |   3 +
 scripts/check_dependencies          |   4 +-
 scripts/mockturtle_build.sh         |   1 +
 scripts/spec_carrier_build.sh       |   2 +-
 scripts/wrtd_build.sh               |   1 +
 13 files changed, 773 insertions(+), 19 deletions(-)
 create mode 100644 patches/adc-lib.diff
 create mode 100644 patches/fmc-adc-100m14b4cha-sw.diff
 create mode 100644 patches/general-cores.diff
 create mode 100644 patches/mock-turtle.diff
 create mode 100644 patches/spec.diff
 create mode 100644 patches/wrtd.diff

diff --git a/patches/adc-lib.diff b/patches/adc-lib.diff
new file mode 100644
index 0000000..d1bc869
--- /dev/null
+++ b/patches/adc-lib.diff
@@ -0,0 +1,12 @@
+diff --git a/lib/PyAdcLib/Makefile b/lib/PyAdcLib/Makefile
+index 5d61c16..2b4cee9 100644
+--- a/lib/PyAdcLib/Makefile
++++ b/lib/PyAdcLib/Makefile
+@@ -3,6 +3,6 @@
+ all:
+ clean:
+ install:
+-	python setup.py install
++	python3 setup.py install
+ 
+ .PHONY: all clean install
diff --git a/patches/fmc-adc-100m14b4cha-sw.diff b/patches/fmc-adc-100m14b4cha-sw.diff
new file mode 100644
index 0000000..5c2972d
--- /dev/null
+++ b/patches/fmc-adc-100m14b4cha-sw.diff
@@ -0,0 +1,154 @@
+diff --git a/kernel/fa-core.c b/kernel/fa-core.c
+index 6e1eb6d..e8b8923 100644
+--- a/kernel/fa-core.c
++++ b/kernel/fa-core.c
+@@ -10,6 +10,7 @@
+ #include <linux/version.h>
+ #include <linux/dmaengine.h>
+ #include <linux/mod_devicetable.h>
++#include <linux/io.h>
+ #include "linux/ipmi-fru.h"
+ #include "linux/fmc.h"
+ 
+@@ -38,6 +39,35 @@ static const int zfad_hw_range[] = {
+ struct workqueue_struct *fa_workqueue;
+ 
+ 
++static int fa_sg_alloc_table_from_pages(struct sg_table *sgt,
++						struct page **pages,
++						unsigned int n_pages,
++						unsigned int offset,
++						unsigned long size,
++						unsigned int max_segment,
++						gfp_t gfp_mask)
++{
++#if KERNEL_VERSION(5, 10, 0) <= LINUX_VERSION_CODE
++#if KERNEL_VERSION(5, 15, 0) <= LINUX_VERSION_CODE
++	return sg_alloc_table_from_pages_segment(sgt, pages,
++			n_pages, offset,
++			size,
++			max_segment, gfp_mask);
++#else
++	struct scatterlist *sg;
++	sg =  __sg_alloc_table_from_pages(sgt, pages, n_pages, offset, size,
++			max_segment, NULL, 0, gfp_mask);
++	if (IS_ERR(sg))
++		return PTR_ERR(sg);
++	else
++		return 0;
++#endif
++#else
++	return __sg_alloc_table_from_pages(sgt, pages, n_pages, offset, size,
++			max_segment, gfp_mask);
++#endif
++}
++
+ /**
+  * Description:
+  *    The version from the Linux kernel automatically squash contiguous pages.
+@@ -374,7 +404,11 @@ static void fa_init_timetag(struct fa_dev *fa)
+ {
+ 	unsigned long seconds;
+ 
++#if KERNEL_VERSION(5, 11, 0) <= LINUX_VERSION_CODE
++	seconds = ktime_get_real_seconds();
++#else
+ 	seconds = get_seconds();
++#endif
+ 	fa_writel(fa, fa->fa_utc_base, &zfad_regs[ZFA_UTC_SECONDS_U],
+ 		  (seconds >> 32) & 0xFFFFFFFF);
+ 	fa_writel(fa, fa->fa_utc_base, &zfad_regs[ZFA_UTC_SECONDS_L],
+@@ -553,12 +587,21 @@ int fa_probe(struct platform_device *pdev)
+ 	fa->pdev = pdev;
+ 	fa->msgdev = &fa->pdev->dev;
+ 
++	/* DMA mask initialization */
++	if (!pdev->dev.dma_mask)
++		pdev->dev.dma_mask = &pdev->dev.coherent_dma_mask;
++
++	if (dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(64))) {
++		if (dma_set_mask_and_coherent(&pdev->dev, DMA_BIT_MASK(32)))
++			dev_err(fa->msgdev, "Could not configure DMA mask");
++	}
++
+ 	/* Assign IO operation */
+ 	switch (pdev->id_entry->driver_data) {
+ 	case ADC_VER_SPEC:
+ 		fa->memops.read = ioread32;
+ 		fa->memops.write = iowrite32;
+-		fa->sg_alloc_table_from_pages = __sg_alloc_table_from_pages;
++		fa->sg_alloc_table_from_pages = fa_sg_alloc_table_from_pages;
+ 		break;
+ 	case ADC_VER_SVEC:
+ 		fa->memops.read = ioread32be;
+diff --git a/kernel/fa-debug.c b/kernel/fa-debug.c
+index 7478641..3e99eb6 100644
+--- a/kernel/fa-debug.c
++++ b/kernel/fa-debug.c
+@@ -179,14 +179,7 @@ int fa_debug_init(struct fa_dev *fa)
+ 	fa->dbg_reg32.regs = fa_debugfs_reg32;
+ 	fa->dbg_reg32.nregs = ARRAY_SIZE(fa_debugfs_reg32);
+ 	fa->dbg_reg32.base = fa->fa_top_level;
+-	fa->dbg_reg = debugfs_create_regset32("regs", 0200, fa->dbg_dir,
+-					      &fa->dbg_reg32);
+-	if (IS_ERR_OR_NULL(fa->dbg_reg)) {
+-		err = PTR_ERR(fa->dbg_reg);
+-		dev_warn(fa->msgdev,
+-			"Cannot create debugfs file \"regs\" (%d)\n",
+-			 err);
+-	}
++	debugfs_create_regset32("regs", 0200, fa->dbg_dir, &fa->dbg_reg32);
+ 
+ 	fa->dbg_reg_spi = debugfs_create_file("spi-regs", 0444,
+ 					      fa->dbg_dir, fa,
+diff --git a/kernel/fmc-adc-100m14b4cha.h b/kernel/fmc-adc-100m14b4cha.h
+index 089e5e1..8a4e1b2 100644
+--- a/kernel/fmc-adc-100m14b4cha.h
++++ b/kernel/fmc-adc-100m14b4cha.h
+@@ -159,6 +159,7 @@ struct fa_calib {
+ #include <linux/workqueue.h>
+ #include <linux/debugfs.h>
+ #include <linux/platform_device.h>
++#include <linux/version.h>
+ #include "linux/fmc.h"
+ 
+ #include <linux/zio.h>
+@@ -189,9 +190,30 @@ enum fa_bus_resource {
+ 	ADC_CARR_VME_ADDR,
+ };
+ 
++#ifndef CONFIG_GENERIC_IOMAP
++static inline u32 (ioread32be)(const volatile void __iomem *addr)
++{
++	return ioread32be(addr);
++}
++
++static inline void (iowrite32be)(u32 value, volatile void __iomem *addr)
++{
++	iowrite32be(value, addr);
++}
++#endif
++
+ struct fa_memory_ops {
++#ifdef CONFIG_GENERIC_IOMAP
++#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE
++	u32 (*read)(const void *addr);
++#else
+ 	u32 (*read)(void *addr);
++#endif
+ 	void (*write)(u32 value, void *addr);
++#else
++	u32 (*read)(const volatile void *addr);
++	void (*write)(u32 value, volatile void *addr);
++#endif
+ };
+ 
+ /*
+@@ -451,7 +473,6 @@ struct fa_dev {
+ 
+ 	struct dentry *dbg_dir;
+ 	struct debugfs_regset32 dbg_reg32;
+-	struct dentry *dbg_reg;
+ 	struct dentry *dbg_reg_spi;
+ 
+ 	/* Operations */
diff --git a/patches/fmc-sw.diff b/patches/fmc-sw.diff
index 9a084e1..9ea845b 100644
--- a/patches/fmc-sw.diff
+++ b/patches/fmc-sw.diff
@@ -1,5 +1,25 @@
+diff --git a/drivers/fmc/fmc-core.c b/drivers/fmc/fmc-core.c
+index d2118e0..61fff4f 100644
+--- a/drivers/fmc/fmc-core.c
++++ b/drivers/fmc/fmc-core.c
+@@ -219,15 +219,11 @@ err_ida:
+  */
+ static void fmc_carrier_del_slot(struct fmc_slot *slot)
+ {
+-	int id;
+-
+ 	if (IS_ERR_OR_NULL(slot))
+ 		return;
+ 
+-	id = slot->dev.id;
+ 	fmc_slot_eeprom_del(slot);
+ 	device_unregister(&slot->dev);
+-	ida_simple_remove(&fmc_slot_ida, id);
+ }
+ 
+ /**
 diff --git a/drivers/fmc/fmc-eeprom.c b/drivers/fmc/fmc-eeprom.c
-index a000a0d..2bd2a6f 100644
+index a000a0d..cb5c778 100644
 --- a/drivers/fmc/fmc-eeprom.c
 +++ b/drivers/fmc/fmc-eeprom.c
 @@ -7,9 +7,14 @@
@@ -49,19 +69,21 @@ index a000a0d..2bd2a6f 100644
   */
  static void fmc_slot_eeprom_init(struct fmc_slot *slot,
  				 struct i2c_board_info *info,
-@@ -48,7 +57,11 @@ static void fmc_slot_eeprom_init(struct fmc_slot *slot,
+@@ -48,7 +57,13 @@ static void fmc_slot_eeprom_init(struct fmc_slot *slot,
  {
  	strncpy(info->type, name, I2C_NAME_SIZE);
  	info->addr = FMC_EEPROM_ADDR_SPACE;
 +#if KERNEL_VERSION(4, 6, 0) <= LINUX_VERSION_CODE
++#if LINUX_VERSION_CODE < KERNEL_VERSION(5,13,0)
 +	info->properties = slot->at24_data;
++#endif
 +#else
  	info->platform_data = &slot->at24_data;
 +#endif
  }
  
  static void fmc_slot_eeprom_init_default(struct fmc_slot *slot,
-@@ -56,8 +69,12 @@ static void fmc_slot_eeprom_init_default(struct fmc_slot *slot,
+@@ -56,8 +71,12 @@ static void fmc_slot_eeprom_init_default(struct fmc_slot *slot,
  {
  	memset(info, 0, sizeof(*info));
  	fmc_slot_eeprom_init(slot, info, FMC_EEPROM_TYPE_DEFAULT);
@@ -74,7 +96,7 @@ index a000a0d..2bd2a6f 100644
  }
  
  /**
-@@ -66,13 +83,41 @@ static void fmc_slot_eeprom_init_default(struct fmc_slot *slot,
+@@ -66,13 +85,44 @@ static void fmc_slot_eeprom_init_default(struct fmc_slot *slot,
  ssize_t fmc_slot_eeprom_read(struct fmc_slot *slot,
  			     void *buf, off_t offset, size_t count)
  {
@@ -85,21 +107,24 @@ index a000a0d..2bd2a6f 100644
 +	struct nvmem_device *nvmem;
 +	char *nvmem_name;
 +	/* 
-+	 * TODO Check if index can be anything else than zero and,
++	 * TODO Check if index can be anything else than 0 or 1 and,
 +	 * if yes, how to get the proper value.
 +	 */
-+	idx = 0;
 +	len = strlen(dev_name(&slot->eeprom->dev)) + 2;
 +	nvmem_name = kzalloc(len, GFP_KERNEL);
 +	if (nvmem_name) {
-+		snprintf(nvmem_name, len, "%s%d",
-+			 dev_name(&slot->eeprom->dev), idx);
-+		nvmem = nvmem_device_get(&slot->dev, nvmem_name);
-+		if (nvmem) {
-+			err = nvmem_device_read(nvmem, offset, count, buf);
++		for (idx = 0; idx <= 1; idx++) {
++			snprintf(nvmem_name, len, "%s%d",
++				 dev_name(&slot->eeprom->dev), idx);
++			nvmem = nvmem_device_get(&slot->dev, nvmem_name);
++			if (!IS_ERR(nvmem)) {
++				err = nvmem_device_read(nvmem, offset, count, buf);
 +#if KERNEL_VERSION(5, 1, 0) <= LINUX_VERSION_CODE
-+			nvmem_device_put(nvmem);
++				nvmem_device_put(nvmem);
 +#endif
++				break;
++			}
++			err = PTR_ERR(nvmem);
 +		}
 +		kfree(nvmem_name);
 +	}
@@ -117,7 +142,21 @@ index a000a0d..2bd2a6f 100644
  }
  EXPORT_SYMBOL(fmc_slot_eeprom_read);
  
-@@ -152,7 +197,9 @@ void fmc_slot_eeprom_del(struct fmc_slot *slot)
+@@ -108,8 +158,13 @@ static int __fmc_slot_eeprom_add(struct fmc_slot *slot,
+ 	}
+ 
+ 	info_l.addr = fmc_slot_i2c_address(info_l.addr, slot->ga);
++#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE
++	slot->eeprom = i2c_new_client_device(slot->adapter, &info_l);
++	if (IS_ERR(slot->eeprom))
++#else
+ 	slot->eeprom = i2c_new_device(slot->adapter, &info_l);
+ 	if (!slot->eeprom)
++#endif
+ 		return -ENODEV;
+ 
+ 	err = sysfs_create_link(&slot->dev.kobj, &slot->eeprom->dev.kobj,
+@@ -152,7 +207,9 @@ void fmc_slot_eeprom_del(struct fmc_slot *slot)
  	sysfs_remove_link(&slot->dev.kobj, FRU_EEPROM_NAME);
  	i2c_unregister_device(slot->eeprom);
  	slot->eeprom = NULL;
@@ -127,7 +166,7 @@ index a000a0d..2bd2a6f 100644
  }
  
  /**
-@@ -197,19 +244,25 @@ int fmc_slot_eeprom_type_set(struct fmc_slot *slot, const char *type)
+@@ -197,19 +254,25 @@ int fmc_slot_eeprom_type_set(struct fmc_slot *slot, const char *type)
  
  
  	memset(&i2c_info, 0, sizeof(i2c_info));
@@ -156,7 +195,7 @@ index a000a0d..2bd2a6f 100644
  	slot->at24_data.byte_len = len;
  	slot->at24_data.page_size = 1; /* 1Byte page to play safe */
  	slot->at24_data.setup = fmc_slot_eeprom_setup;
-@@ -219,7 +272,15 @@ int fmc_slot_eeprom_type_set(struct fmc_slot *slot, const char *type)
+@@ -219,7 +282,15 @@ int fmc_slot_eeprom_type_set(struct fmc_slot *slot, const char *type)
  		i2c_info.type, i2c_info.addr,
  		slot->at24_data.byte_len, slot->at24_data.page_size,
  		slot->at24_data.flags);
@@ -173,7 +212,7 @@ index a000a0d..2bd2a6f 100644
  }
  EXPORT_SYMBOL(fmc_slot_eeprom_type_set);
 diff --git a/drivers/fmc/fru-parse.c b/drivers/fmc/fru-parse.c
-index 35a1380..2fd95eb 100644
+index 52b997c..2fd95eb 100644
 --- a/drivers/fmc/fru-parse.c
 +++ b/drivers/fmc/fru-parse.c
 @@ -5,12 +5,6 @@
diff --git a/patches/general-cores.diff b/patches/general-cores.diff
new file mode 100644
index 0000000..7b0edf1
--- /dev/null
+++ b/patches/general-cores.diff
@@ -0,0 +1,136 @@
+diff --git a/software/htvic/drivers/htvic.c b/software/htvic/drivers/htvic.c
+index 2f87aa7..ce6b2b6 100644
+--- a/software/htvic/drivers/htvic.c
++++ b/software/htvic/drivers/htvic.c
+@@ -269,29 +269,6 @@ static struct irq_chip htvic_chip = {
+ 	.irq_set_type = htvic_irq_set_type,
+ };
+ 
+-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,7,0)
+-static int htvic_irq_domain_select(struct irq_domain *d, struct irq_fwspec *fwspec,
+-		      enum irq_domain_bus_token bus_token)
+-{
+-	struct htvic_device *htvic = d->host_data;
+-	/*
+-	 * FIXME this should point to htvic->pdev->dev.parent. Today it is not
+-	 * a problem for CERN-like installations, so we leave it like this
+-	 * so that the WR-stating kit works.
+-	 */
+-	struct device *dev = &htvic->pdev->dev;
+-	struct device *req_dev;
+-
+-	if(fwspec->param_count != 2)
+-		return 0;
+-
+-	req_dev = (struct device *) ((((unsigned long) fwspec->param[0]) << 32) |
+-		(((unsigned long) fwspec->param[1]) & 0xFFFFFFFF));
+-
+-	return (dev == req_dev);
+-}
+-#endif
+-
+ /**
+  * Given the hardware IRQ and the Linux IRQ number (virtirq), configure the
+  * Linux IRQ number in order to handle properly the incoming interrupts
+@@ -321,9 +298,6 @@ static int htvic_irq_domain_map(struct irq_domain *h,
+ 
+ 
+ static struct irq_domain_ops htvic_irq_domain_ops = {
+-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,7,0)
+-	.select = htvic_irq_domain_select,
+-#endif
+ 	.map = htvic_irq_domain_map,
+ };
+ 
+@@ -335,11 +309,27 @@ static int htvic_irq_mapping(struct htvic_device *htvic)
+ {
+ 	int i, irq;
+ 
++#if KERNEL_VERSION(4, 4, 0) <= LINUX_VERSION_CODE
++	htvic->pdev->dev.fwnode = irq_domain_alloc_fwnode(NULL);
++	if (!htvic->pdev->dev.fwnode) {
++		dev_err(&htvic->pdev->dev, "Could not allocate fwnode");
++		return -ENOMEM;
++	}
++	htvic->domain = irq_domain_create_linear(htvic->pdev->dev.fwnode,
++					      VIC_MAX_VECTORS,
++					      &htvic_irq_domain_ops, htvic);
++	if (!htvic->domain) {
++		irq_domain_free_fwnode(htvic->pdev->dev.fwnode);
++		htvic->pdev->dev.fwnode = NULL;
++		return -ENOMEM;
++	}
++#else
+ 	htvic->domain = irq_domain_add_linear((void *)&htvic->pdev->dev,
+ 					      VIC_MAX_VECTORS,
+ 					      &htvic_irq_domain_ops, htvic);
+ 	if (!htvic->domain)
+ 		return -ENOMEM;
++#endif
+ #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,11,0)
+ 	htvic->domain->name = kasprintf(GFP_KERNEL, "%s",
+ 					dev_name(&htvic->pdev->dev));
+@@ -362,6 +352,10 @@ static int htvic_irq_mapping(struct htvic_device *htvic)
+ 
+ out:
+ 	irq_domain_remove(htvic->domain);
++#if KERNEL_VERSION(4, 4, 0) <= LINUX_VERSION_CODE
++	irq_domain_free_fwnode(htvic->pdev->dev.fwnode);
++	htvic->pdev->dev.fwnode = NULL;
++#endif
+ 	return -EPERM;
+ }
+ 
+@@ -613,6 +607,10 @@ static int htvic_remove(struct platform_device *pdev)
+ 	 * Clear the memory and restore flags when needed
+ 	 */
+ 	irq_domain_remove(htvic->domain);
++#if KERNEL_VERSION(4, 4, 0) <= LINUX_VERSION_CODE
++	irq_domain_free_fwnode(htvic->pdev->dev.fwnode);
++	htvic->pdev->dev.fwnode = NULL;
++#endif
+ 	kfree(htvic);
+ 	dev_set_drvdata(&pdev->dev, NULL);
+ 
+diff --git a/software/i2c-ocores/drivers/i2c/busses/i2c-ocores.c b/software/i2c-ocores/drivers/i2c/busses/i2c-ocores.c
+index 12465de..6941bc8 100644
+--- a/software/i2c-ocores/drivers/i2c/busses/i2c-ocores.c
++++ b/software/i2c-ocores/drivers/i2c/busses/i2c-ocores.c
+@@ -982,7 +982,11 @@ static int ocores_i2c_probe(struct platform_device *pdev)
+ 	/* add in known devices to the bus */
+ 	if (pdata) {
+ 		for (i = 0; i < pdata->num_devices; i++)
++#if KERNEL_VERSION(5, 2, 0) <= LINUX_VERSION_CODE
++			i2c_new_client_device(&i2c->adap, pdata->devices + i);
++#else
+ 			i2c_new_device(&i2c->adap, pdata->devices + i);
++#endif
+ 	}
+ 
+ 	return 0;
+diff --git a/software/spi-ocores/drivers/spi/spi-ocores.c b/software/spi-ocores/drivers/spi/spi-ocores.c
+index 1351d8f..a8aacc4 100644
+--- a/software/spi-ocores/drivers/spi/spi-ocores.c
++++ b/software/spi-ocores/drivers/spi/spi-ocores.c
+@@ -6,6 +6,7 @@
+ 
+ #include <linux/kernel.h>
+ #include <linux/module.h>
++#include <linux/version.h>
+ #include <linux/init.h>
+ #include <linux/delay.h>
+ #include <linux/platform_device.h>
+@@ -404,8 +405,13 @@ static int spi_ocores_hw_xfer_wait_complete(struct spi_ocores *sp,
+  */
+ static int spi_ocores_sw_xfer_finish(struct spi_ocores *sp)
+ {
++#if KERNEL_VERSION(5,13,0) <= LINUX_VERSION_CODE
++	if (sp->cur_xfer->delay.value)
++		udelay(sp->cur_xfer->delay.value);
++#else
+ 	if (sp->cur_xfer->delay_usecs)
+ 		udelay(sp->cur_xfer->delay_usecs);
++#endif
+ 	if (sp->cur_xfer->cs_change) {
+ 		unsigned int cs;
+ 
diff --git a/patches/mock-turtle.diff b/patches/mock-turtle.diff
new file mode 100644
index 0000000..80913cf
--- /dev/null
+++ b/patches/mock-turtle.diff
@@ -0,0 +1,107 @@
+diff --git a/software/kernel/mockturtle-core.c b/software/kernel/mockturtle-core.c
+index 65c1167..13e596a 100644
+--- a/software/kernel/mockturtle-core.c
++++ b/software/kernel/mockturtle-core.c
+@@ -28,6 +28,7 @@
+ #include <linux/mod_devicetable.h>
+ #include <linux/uaccess.h>
+ #include <linux/version.h>
++#include <linux/io.h>
+ 
+ #include <mockturtle/hw/mockturtle_cpu_csr.h>
+ #include <mockturtle/hw/mockturtle_queue.h>
+diff --git a/software/kernel/mockturtle-drv.h b/software/kernel/mockturtle-drv.h
+index 75e3929..99e7267 100644
+--- a/software/kernel/mockturtle-drv.h
++++ b/software/kernel/mockturtle-drv.h
+@@ -12,6 +12,7 @@
+ #include <linux/irqreturn.h>
+ #include <linux/circ_buf.h>
+ #include <linux/tty.h>
++#include <linux/version.h>
+ 
+ #include "mockturtle/hw/mockturtle_addresses.h"
+ #include "mockturtle/hw/mockturtle_queue.h"
+@@ -75,9 +76,30 @@ static inline uint32_t trtl_get_sequence(struct trtl_msg *msg)
+ 	return msg->data[1];
+ }
+ 
++#ifndef CONFIG_GENERIC_IOMAP
++static inline u32 (ioread32be)(const volatile void __iomem *addr)
++{
++	return ioread32be(addr);
++}
++
++static inline void (iowrite32be)(u32 value, volatile void __iomem *addr)
++{
++	iowrite32be(value, addr);
++}
++#endif
++
+ struct trtl_memory_ops {
++#ifdef CONFIG_GENERIC_IOMAP
++#if KERNEL_VERSION(5, 8, 0) <= LINUX_VERSION_CODE
++	u32 (*read)(const void *addr);
++#else
+ 	u32 (*read)(void *addr);
++#endif
+ 	void (*write)(u32 value, void *addr);
++#else
++	u32 (*read)(const volatile void *addr);
++	void (*write)(u32 value, volatile void *addr);
++#endif
+ };
+ 
+ extern struct trtl_memory_ops memops;
+diff --git a/software/kernel/mockturtle-tty.c b/software/kernel/mockturtle-tty.c
+index 077af93..b1813db 100644
+--- a/software/kernel/mockturtle-tty.c
++++ b/software/kernel/mockturtle-tty.c
+@@ -204,7 +204,11 @@ void trtl_tty_remove(struct trtl_dev *trtl)
+ 
+ 	kfree(trtl->tty_driver->driver_name);
+ 	kfree(trtl->tty_driver->name);
++#if KERNEL_VERSION(5,15,0) <= LINUX_VERSION_CODE
++	tty_driver_kref_put(trtl->tty_driver);
++#else
+ 	put_tty_driver(trtl->tty_driver);
++#endif
+ }
+ 
+ 
+@@ -221,7 +225,11 @@ int trtl_tty_probe(struct trtl_dev *trtl)
+ 		goto err; /* no error code, we can live without console */
+ 	}
+ 
++#if KERNEL_VERSION(5,15,0) <= LINUX_VERSION_CODE
++	trtl->tty_driver = tty_alloc_driver(trtl->cfgrom.n_cpu, 0);
++#else
+ 	trtl->tty_driver = alloc_tty_driver(trtl->cfgrom.n_cpu);
++#endif
+ 	if (!trtl->tty_driver)
+ 		return -ENOMEM;
+ 	trtl->tty_driver->driver_name = kasprintf(GFP_KERNEL, "%s-tty",
+@@ -276,7 +284,11 @@ err_tty:
+ err_cfg:
+ 	kfree(trtl->tty_driver->driver_name);
+ 	kfree(trtl->tty_driver->name);
++#if KERNEL_VERSION(5,15,0) <= LINUX_VERSION_CODE
++	tty_driver_kref_put(trtl->tty_driver);
++#else
+ 	put_tty_driver(trtl->tty_driver);
++#endif
+ err:
+ 	trtl->tty_driver = NULL;
+ 	return err;
+diff --git a/software/lib/PyMockTurtle/Makefile b/software/lib/PyMockTurtle/Makefile
+index ad5f5d7..345f8ae 100644
+--- a/software/lib/PyMockTurtle/Makefile
++++ b/software/lib/PyMockTurtle/Makefile
+@@ -7,6 +7,6 @@
+ all:
+ clean:
+ install:
+-	python setup.py install
++	python3 setup.py install
+ 
+ .PHONY: all clean install
diff --git a/patches/spec.diff b/patches/spec.diff
new file mode 100644
index 0000000..6fad436
--- /dev/null
+++ b/patches/spec.diff
@@ -0,0 +1,238 @@
+diff --git a/software/kernel/gn412x-fcl.c b/software/kernel/gn412x-fcl.c
+index cfd7c98..472f53e 100644
+--- a/software/kernel/gn412x-fcl.c
++++ b/software/kernel/gn412x-fcl.c
+@@ -177,7 +177,10 @@ static const struct debugfs_reg32 gn412x_debugfs_reg32[] = {
+ static int gn4124_dbg_init(struct platform_device *pdev)
+ {
+ 	struct gn412x_fcl_dev *gn412x = platform_get_drvdata(pdev);
+-	struct dentry *dir, *file;
++	struct dentry *dir;
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
++	struct dentry *file;
++#endif
+ 	int err;
+ 
+ 	dir = debugfs_create_dir(dev_name(&pdev->dev), NULL);
+@@ -192,6 +195,10 @@ static int gn4124_dbg_init(struct platform_device *pdev)
+ 	gn412x->dbg_reg32.regs = gn412x_debugfs_reg32;
+ 	gn412x->dbg_reg32.nregs = ARRAY_SIZE(gn412x_debugfs_reg32);
+ 	gn412x->dbg_reg32.base = gn412x->mem;
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++	debugfs_create_regset32(GN412X_DBG_REG_NAME, 0200,
++				       dir, &gn412x->dbg_reg32);
++#else
+ 	file = debugfs_create_regset32(GN412X_DBG_REG_NAME, 0200,
+ 				       dir, &gn412x->dbg_reg32);
+ 	if (IS_ERR_OR_NULL(file)) {
+@@ -201,13 +208,16 @@ static int gn4124_dbg_init(struct platform_device *pdev)
+ 			 GN412X_DBG_REG_NAME, err);
+ 		goto err_reg32;
+ 	}
++	gn412x->dbg_reg = file;
++#endif
+ 
+ 	gn412x->dbg_dir = dir;
+-	gn412x->dbg_reg = file;
+ 	return 0;
+ 
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
+ err_reg32:
+ 	debugfs_remove_recursive(dir);
++#endif
+ err_dir:
+ 	return err;
+ }
+diff --git a/software/kernel/gn412x-gpio.c b/software/kernel/gn412x-gpio.c
+index 315f37e..6aa0f0d 100644
+--- a/software/kernel/gn412x-gpio.c
++++ b/software/kernel/gn412x-gpio.c
+@@ -75,7 +75,10 @@ static const struct debugfs_reg32 gn412x_debugfs_reg32[] = {
+ 
+ static int gn412x_dbg_init(struct gn412x_gpio_dev *gn412x)
+ {
+-	struct dentry *dir, *file;
++	struct dentry *dir;
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
++	struct dentry *file;
++#endif
+ 	int err;
+ 
+ #if KERNEL_VERSION(4, 5, 0) > LINUX_VERSION_CODE
+@@ -96,6 +99,10 @@ static int gn412x_dbg_init(struct gn412x_gpio_dev *gn412x)
+ 	gn412x->dbg_reg32.regs = gn412x_debugfs_reg32;
+ 	gn412x->dbg_reg32.nregs = ARRAY_SIZE(gn412x_debugfs_reg32);
+ 	gn412x->dbg_reg32.base = gn412x->mem;
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++	debugfs_create_regset32(GN412X_DBG_REG_NAME, 0200,
++				       dir, &gn412x->dbg_reg32);
++#else
+ 	file = debugfs_create_regset32(GN412X_DBG_REG_NAME, 0200,
+ 				       dir, &gn412x->dbg_reg32);
+ 	if (IS_ERR_OR_NULL(file)) {
+@@ -105,13 +112,16 @@ static int gn412x_dbg_init(struct gn412x_gpio_dev *gn412x)
+ 			 GN412X_DBG_REG_NAME, err);
+ 		goto err_reg32;
+ 	}
++	gn412x->dbg_reg = file;
++#endif
+ 
+ 	gn412x->dbg_dir = dir;
+-	gn412x->dbg_reg = file;
+ 	return 0;
+ 
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
+ err_reg32:
+ 	debugfs_remove_recursive(dir);
++#endif
+ err_dir:
+ 	return err;
+ }
+diff --git a/software/kernel/spec-compat.c b/software/kernel/spec-compat.c
+index 9973df0..2232c8c 100644
+--- a/software/kernel/spec-compat.c
++++ b/software/kernel/spec-compat.c
+@@ -13,6 +13,15 @@
+ 
+ 
+ 
++#if KERNEL_VERSION(5, 7, 0) <= LINUX_VERSION_CODE
++#define KPROBE_LOOKUP
++#include <linux/kprobes.h>
++typedef unsigned long (*kallsyms_lookup_name_t)(const char *name);
++static struct kprobe kp = {
++	.symbol_name = "kallsyms_lookup_name"
++};
++#endif
++
+ #if KERNEL_VERSION(4, 10, 0) > LINUX_VERSION_CODE && !defined(CONFIG_FPGA_MGR_BACKPORT)
+ struct fpga_manager *__fpga_mgr_get(struct device *dev)
+ {
+@@ -60,6 +69,13 @@ struct fpga_manager *fpga_mgr_get(struct device *dev)
+ 	struct class *fpga_mgr_class;
+ 	struct device *mgr_dev;
+ 
++#ifdef KPROBE_LOOKUP
++	kallsyms_lookup_name_t kallsyms_lookup_name;
++
++	register_kprobe(&kp);
++	kallsyms_lookup_name = (kallsyms_lookup_name_t) kp.addr;
++	unregister_kprobe(&kp);
++#endif
+ 	fpga_mgr_class = (struct class *) kallsyms_lookup_name(FPGA_CLASS);
+ 	mgr_dev = class_find_device(fpga_mgr_class, NULL, dev,
+ 				    fpga_mgr_dev_match);
+@@ -156,6 +172,13 @@ int compat_gpiod_add_lookup_table(struct gpiod_lookup_table *table)
+ {
+ 	void (*gpiod_add_lookup_table_p)(struct gpiod_lookup_table *table);
+ 
++#ifdef KPROBE_LOOKUP
++	kallsyms_lookup_name_t kallsyms_lookup_name;
++
++	register_kprobe(&kp);
++	kallsyms_lookup_name = (kallsyms_lookup_name_t) kp.addr;
++	unregister_kprobe(&kp);
++#endif
+ 	gpiod_add_lookup_table_p = (void *) kallsyms_lookup_name("gpiod_add_lookup_table");
+ 
+ 	if (gpiod_add_lookup_table_p)
+@@ -168,6 +191,13 @@ int compat_gpiod_add_lookup_table(struct gpiod_lookup_table *table)
+ #if KERNEL_VERSION(4, 3, 0) > LINUX_VERSION_CODE
+ void gpiod_remove_lookup_table(struct gpiod_lookup_table *table)
+ {
++#ifdef KPROBE_LOOKUP
++	kallsyms_lookup_name_t kallsyms_lookup_name;
++
++	register_kprobe(&kp);
++	kallsyms_lookup_name = (kallsyms_lookup_name_t) kp.addr;
++	unregister_kprobe(&kp);
++#endif
+ 	struct mutex *gpio_lookup_lock_p = (void *) kallsyms_lookup_name("gpio_lookup_lock");
+ 
+ 	mutex_lock(gpio_lookup_lock_p);
+diff --git a/software/kernel/spec-core-fpga.c b/software/kernel/spec-core-fpga.c
+index 480bf05..96f3db6 100644
+--- a/software/kernel/spec-core-fpga.c
++++ b/software/kernel/spec-core-fpga.c
+@@ -140,6 +140,11 @@ static int spec_fpga_dbg_init(struct spec_fpga *spec_fpga)
+ 	spec_fpga->dbg_csr_reg.regs = spec_fpga_debugfs_reg32;
+ 	spec_fpga->dbg_csr_reg.nregs = ARRAY_SIZE(spec_fpga_debugfs_reg32);
+ 	spec_fpga->dbg_csr_reg.base = spec_fpga->fpga;
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++	debugfs_create_regset32(SPEC_DBG_CSR_NAME, 0200,
++						     spec_fpga->dbg_dir_fpga,
++						     &spec_fpga->dbg_csr_reg);
++#else
+ 	spec_fpga->dbg_csr = debugfs_create_regset32(SPEC_DBG_CSR_NAME, 0200,
+ 						spec_fpga->dbg_dir_fpga,
+ 						&spec_fpga->dbg_csr_reg);
+@@ -150,6 +155,7 @@ static int spec_fpga_dbg_init(struct spec_fpga *spec_fpga)
+ 			SPEC_DBG_CSR_NAME, err);
+ 		goto err;
+ 	}
++#endif
+ 
+ 	spec_fpga->dbg_bld = debugfs_create_file(SPEC_DBG_BLD_INFO_NAME,
+ 						 0444,
+@@ -202,14 +208,8 @@ static struct resource spec_fpga_vic_res[] = {
+ 
+ struct irq_domain *spec_fpga_irq_find_host(struct device *dev)
+ {
+-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,7,0)
+-	struct irq_fwspec fwspec = {
+-		.fwnode = dev->fwnode,
+-		.param_count = 2,
+-		.param[0] = ((unsigned long)dev >> 32) & 0xffffffff,
+-		.param[1] = ((unsigned long)dev) & 0xffffffff,
+-	};
+-	return irq_find_matching_fwspec(&fwspec, DOMAIN_BUS_ANY);
++#if KERNEL_VERSION(4, 4, 0) <= LINUX_VERSION_CODE
++	return irq_find_matching_fwnode(dev->fwnode, DOMAIN_BUS_ANY);
+ #else
+ 	return (irq_find_host((void *)dev));
+ #endif
+diff --git a/software/kernel/spec-core.c b/software/kernel/spec-core.c
+index 9956e29..0c7baa3 100644
+--- a/software/kernel/spec-core.c
++++ b/software/kernel/spec-core.c
+@@ -90,7 +90,7 @@ static ssize_t spec_dbg_fw_write(struct file *file,
+ 	if (err)
+ 		return -EFAULT;
+ 
+-	err = spec_fw_load(spec_gn412x, buf);
++	err = spec_fw_load(spec_gn412x, buf_l);
+ 	if (err)
+ 		return err;
+ 	return count;
+diff --git a/software/kernel/spec-gn412x-dma.c b/software/kernel/spec-gn412x-dma.c
+index ead355c..10bd54f 100644
+--- a/software/kernel/spec-gn412x-dma.c
++++ b/software/kernel/spec-gn412x-dma.c
+@@ -679,7 +679,10 @@ static irqreturn_t gn412x_dma_irq_handler(int irq, void *arg)
+ 
+ static int gn412x_dma_dbg_init(struct gn412x_dma_device *gn412x_dma)
+ {
+-	struct dentry *dir, *file;
++	struct dentry *dir;
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
++	struct dentry *file;
++#endif
+ 	int err;
+ 
+ 	dir = debugfs_create_dir(dev_name(&gn412x_dma->pdev->dev), NULL);
+@@ -694,6 +697,10 @@ static int gn412x_dma_dbg_init(struct gn412x_dma_device *gn412x_dma)
+ 	gn412x_dma->dbg_reg32.regs = gn412x_dma_debugfs_reg32;
+ 	gn412x_dma->dbg_reg32.nregs = ARRAY_SIZE(gn412x_dma_debugfs_reg32);
+ 	gn412x_dma->dbg_reg32.base = gn412x_dma->addr;
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++	debugfs_create_regset32(GN412X_DMA_DBG_REG_NAME, 0200,
++				       dir, &gn412x_dma->dbg_reg32);
++#else
+ 	file = debugfs_create_regset32(GN412X_DMA_DBG_REG_NAME, 0200,
+ 				       dir, &gn412x_dma->dbg_reg32);
+ 	if (IS_ERR_OR_NULL(file)) {
+@@ -703,13 +710,16 @@ static int gn412x_dma_dbg_init(struct gn412x_dma_device *gn412x_dma)
+ 			 GN412X_DMA_DBG_REG_NAME, err);
+ 		goto err_reg32;
+ 	}
++	gn412x_dma->dbg_reg = file;
++#endif
+ 
+ 	gn412x_dma->dbg_dir = dir;
+-	gn412x_dma->dbg_reg = file;
+ 	return 0;
+ 
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
+ err_reg32:
+ 	debugfs_remove_recursive(dir);
++#endif
+ err_dir:
+ 	return err;
+ }
diff --git a/patches/wrtd.diff b/patches/wrtd.diff
new file mode 100644
index 0000000..cc2dcd9
--- /dev/null
+++ b/patches/wrtd.diff
@@ -0,0 +1,24 @@
+diff --git a/software/lib/python/Makefile b/software/lib/python/Makefile
+index 5d61c16..2b4cee9 100644
+--- a/software/lib/python/Makefile
++++ b/software/lib/python/Makefile
+@@ -3,6 +3,6 @@
+ all:
+ clean:
+ install:
+-	python setup.py install
++	python3 setup.py install
+ 
+ .PHONY: all clean install
+diff --git a/software/tools/Makefile b/software/tools/Makefile
+index 5d61c16..2b4cee9 100644
+--- a/software/tools/Makefile
++++ b/software/tools/Makefile
+@@ -3,6 +3,6 @@
+ all:
+ clean:
+ install:
+-	python setup.py install
++	python3 setup.py install
+ 
+ .PHONY: all clean install
diff --git a/patches/zio.diff b/patches/zio.diff
index f6c5570..f7e3c3a 100644
--- a/patches/zio.diff
+++ b/patches/zio.diff
@@ -47,6 +47,24 @@ index f1d7e4c..1dd88b4 100644
  
  	pr_info("zio-core had been loaded\n");
  	return 0;
+diff --git a/drivers/zio/devices/zio-fake-dtc.c b/drivers/zio/devices/zio-fake-dtc.c
+index ad1b9f6..629a152 100644
+--- a/drivers/zio/devices/zio-fake-dtc.c
++++ b/drivers/zio/devices/zio-fake-dtc.c
+@@ -34,8 +34,13 @@ static enum hrtimer_restart zdtc_fn(struct hrtimer *timer)
+ 	struct timespec ts;
+ 
+ 	getnstimeofday(&ts);
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++	dev_dbg(&zdtc.cset->head.dev, "%s: %9lli.%09li\n", __func__,
++		ts.tv_sec, ts.tv_nsec);
++#else
+ 	dev_dbg(&zdtc.cset->head.dev, "%s: %9li.%09li\n", __func__,
+ 		ts.tv_sec, ts.tv_nsec);
++#endif
+ 	zio_trigger_data_done(zdtc.cset);
+ 	return HRTIMER_NORESTART;
+ }
 diff --git a/drivers/zio/devices/zio-loop.c b/drivers/zio/devices/zio-loop.c
 index 4edd97f..c88acda 100644
 --- a/drivers/zio/devices/zio-loop.c
@@ -84,3 +102,24 @@ index 42f292a..9f0ca40 100644
  	case 1:
  		ctrl->zio_alarms &= (~v1);
  		break;
+diff --git a/include/linux/zio.h b/include/linux/zio.h
+index 0650656..971a01d 100644
+--- a/include/linux/zio.h
++++ b/include/linux/zio.h
+@@ -23,9 +23,16 @@ extern const uint32_t zio_version;
+ #include <linux/list.h>
+ #include <linux/string.h>
+ #include <linux/spinlock.h>
++#include <linux/version.h>
+ 
+ #include <linux/zio-sysfs.h>
+ 
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++#define timespec timespec64
++#define timespec_to_ktime(__z) timespec64_to_ktime(__z)
++#define getnstimeofday(__z) ktime_get_real_ts64(__z)
++#endif
++
+ #define ZIO_NR_MINORS  (1<<16) /* Ask for 64k minors: no harm done... */
+ 
+ /* Name the data structures */
diff --git a/scripts/adc_lib_build.sh b/scripts/adc_lib_build.sh
index 0105750..97d9066 100644
--- a/scripts/adc_lib_build.sh
+++ b/scripts/adc_lib_build.sh
@@ -16,6 +16,9 @@ export ZIO=$BUILD_DIR/zio
 export FMCADC100M=$BUILD_DIR/fmc-adc-100m14b4cha-sw
 [ $SKIP_BUILD ] || make
 [ $SKIP_INSTALL ] || sudo -E make install
+[ $SKIP_INSTALL ] || sudo -E install -m 0755 $BUILD_DIR/$PROJECT/lib/libadc.so /usr/local/lib
+[ $SKIP_INSTALL ] || sudo -E sh -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/adc.conf'
+[ $SKIP_INSTALL ] || sudo -E ldconfig
 [ $SKIP_INSTALL ] || sudo -E make -C lib/PyAdcLib install
 
 . $SCRIPT_DIR/post_script
diff --git a/scripts/check_dependencies b/scripts/check_dependencies
index 02dd90c..81d1aaf 100644
--- a/scripts/check_dependencies
+++ b/scripts/check_dependencies
@@ -30,7 +30,7 @@ _is_present() {
 
 # Internal function to check if a given python module is present
 _pymod_check() {
-    python -c "import ${1}" 2> $BUILD_DIR/$1.pymod_check
+    python3 -c "import ${1}" 2> $BUILD_DIR/$1.pymod_check
     if  [ -s $BUILD_DIR/$1.pymod_check ]; then
         echo "ERROR: Python module \"${1}\" not found. Please install it before running this script."
         DEP_FAIL=1
@@ -51,7 +51,7 @@ _is_present git
 _is_present sudo
 _is_present gcc
 _is_present make
-_is_present python
+_is_present python3
 _is_present lua
 _is_present curl
 
diff --git a/scripts/mockturtle_build.sh b/scripts/mockturtle_build.sh
index f171eb5..06d4332 100644
--- a/scripts/mockturtle_build.sh
+++ b/scripts/mockturtle_build.sh
@@ -11,6 +11,7 @@ cd $BUILD_DIR
 [ -d $PROJECT ] || git clone https://ohwr.org/project/mock-turtle.git $PROJECT
 cd $PROJECT
 git checkout -B release v4.0.4
+[ $SKIP_PATCH ] || [ -e $PATCH_DIR/$PROJECT.diff ] && patch -p1 < $PATCH_DIR/$PROJECT.diff
 [ $SKIP_BUILD ] || WBGEN2=$BUILD_DIR/wishbone-gen/wbgen2 make -C software
 [ $SKIP_INSTALL ] || WBGEN2=$BUILD_DIR/wishbone-gen/wbgen2 sudo -E make -C software install
 [ $SKIP_INSTALL ] || sudo -E make -C software/lib/PyMockTurtle install
diff --git a/scripts/spec_carrier_build.sh b/scripts/spec_carrier_build.sh
index 5b56c71..677b8cf 100644
--- a/scripts/spec_carrier_build.sh
+++ b/scripts/spec_carrier_build.sh
@@ -15,7 +15,7 @@ cd $BUILD_DIR
 cd $PROJECT
 git checkout -B release v1.4.9
 [ $SKIP_PATCH ] || [ -e $PATCH_DIR/$PROJECT.diff ] && patch -p1 < $PATCH_DIR/$PROJECT.diff
-export CHEBY="python $BUILD_DIR/cheby/proto/cheby.py"
+export CHEBY="python3 $BUILD_DIR/cheby/proto/cheby.py"
 export FMC="$BUILD_DIR/fmc-sw"
 export I2C="$BUILD_DIR/general-cores/software/i2c-ocores"
 export SPI="$BUILD_DIR/general-cores/software/spi-ocores"
diff --git a/scripts/wrtd_build.sh b/scripts/wrtd_build.sh
index 60e8822..604f94f 100644
--- a/scripts/wrtd_build.sh
+++ b/scripts/wrtd_build.sh
@@ -12,6 +12,7 @@ cd $BUILD_DIR
 cd $PROJECT
 #TODO: release
 git checkout -b tmp 1454731
+[ $SKIP_PATCH ] || [ -e $PATCH_DIR/$PROJECT.diff ] && patch -p1 < $PATCH_DIR/$PROJECT.diff
 export WRTD_DEP_TRTL=$BUILD_DIR/mock-turtle
 [ $SKIP_BUILD ] || make -C software
 [ $SKIP_INSTALL ] || sudo -E make -C software install
-- 
2.34.1

