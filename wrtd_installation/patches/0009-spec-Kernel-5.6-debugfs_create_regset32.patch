From db8a9b7de3caf30fbbbdbbb5fa706ac2cd8d1f3c Mon Sep 17 00:00:00 2001
From: Mathis MARION <mathis.marion@grenoble-inp.org>
Date: Thu, 29 Jul 2021 16:33:04 +0200
Subject: [PATCH 09/18] [spec] Kernel 5.6 debugfs_create_regset32

The signature for `debugfs_create_regset32` changed from
returning a `struct dentry *` to `void`.
Error checking is no longer possible.
---
 patches/spec.diff | 159 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 159 insertions(+)
 create mode 100644 patches/spec.diff

diff --git a/patches/spec.diff b/patches/spec.diff
new file mode 100644
index 0000000..aa71bc6
--- /dev/null
+++ b/patches/spec.diff
@@ -0,0 +1,159 @@
+diff --git a/software/kernel/gn412x-fcl.c b/software/kernel/gn412x-fcl.c
+index cfd7c98..472f53e 100644
+--- a/software/kernel/gn412x-fcl.c
++++ b/software/kernel/gn412x-fcl.c
+@@ -177,7 +177,10 @@ static const struct debugfs_reg32 gn412x_debugfs_reg32[] = {
+ static int gn4124_dbg_init(struct platform_device *pdev)
+ {
+ 	struct gn412x_fcl_dev *gn412x = platform_get_drvdata(pdev);
+-	struct dentry *dir, *file;
++	struct dentry *dir;
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
++	struct dentry *file;
++#endif
+ 	int err;
+ 
+ 	dir = debugfs_create_dir(dev_name(&pdev->dev), NULL);
+@@ -192,6 +195,10 @@ static int gn4124_dbg_init(struct platform_device *pdev)
+ 	gn412x->dbg_reg32.regs = gn412x_debugfs_reg32;
+ 	gn412x->dbg_reg32.nregs = ARRAY_SIZE(gn412x_debugfs_reg32);
+ 	gn412x->dbg_reg32.base = gn412x->mem;
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++	debugfs_create_regset32(GN412X_DBG_REG_NAME, 0200,
++				       dir, &gn412x->dbg_reg32);
++#else
+ 	file = debugfs_create_regset32(GN412X_DBG_REG_NAME, 0200,
+ 				       dir, &gn412x->dbg_reg32);
+ 	if (IS_ERR_OR_NULL(file)) {
+@@ -201,13 +208,16 @@ static int gn4124_dbg_init(struct platform_device *pdev)
+ 			 GN412X_DBG_REG_NAME, err);
+ 		goto err_reg32;
+ 	}
++	gn412x->dbg_reg = file;
++#endif
+ 
+ 	gn412x->dbg_dir = dir;
+-	gn412x->dbg_reg = file;
+ 	return 0;
+ 
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
+ err_reg32:
+ 	debugfs_remove_recursive(dir);
++#endif
+ err_dir:
+ 	return err;
+ }
+diff --git a/software/kernel/gn412x-gpio.c b/software/kernel/gn412x-gpio.c
+index 315f37e..6aa0f0d 100644
+--- a/software/kernel/gn412x-gpio.c
++++ b/software/kernel/gn412x-gpio.c
+@@ -75,7 +75,10 @@ static const struct debugfs_reg32 gn412x_debugfs_reg32[] = {
+ 
+ static int gn412x_dbg_init(struct gn412x_gpio_dev *gn412x)
+ {
+-	struct dentry *dir, *file;
++	struct dentry *dir;
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
++	struct dentry *file;
++#endif
+ 	int err;
+ 
+ #if KERNEL_VERSION(4, 5, 0) > LINUX_VERSION_CODE
+@@ -96,6 +99,10 @@ static int gn412x_dbg_init(struct gn412x_gpio_dev *gn412x)
+ 	gn412x->dbg_reg32.regs = gn412x_debugfs_reg32;
+ 	gn412x->dbg_reg32.nregs = ARRAY_SIZE(gn412x_debugfs_reg32);
+ 	gn412x->dbg_reg32.base = gn412x->mem;
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++	debugfs_create_regset32(GN412X_DBG_REG_NAME, 0200,
++				       dir, &gn412x->dbg_reg32);
++#else
+ 	file = debugfs_create_regset32(GN412X_DBG_REG_NAME, 0200,
+ 				       dir, &gn412x->dbg_reg32);
+ 	if (IS_ERR_OR_NULL(file)) {
+@@ -105,13 +112,16 @@ static int gn412x_dbg_init(struct gn412x_gpio_dev *gn412x)
+ 			 GN412X_DBG_REG_NAME, err);
+ 		goto err_reg32;
+ 	}
++	gn412x->dbg_reg = file;
++#endif
+ 
+ 	gn412x->dbg_dir = dir;
+-	gn412x->dbg_reg = file;
+ 	return 0;
+ 
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
+ err_reg32:
+ 	debugfs_remove_recursive(dir);
++#endif
+ err_dir:
+ 	return err;
+ }
+diff --git a/software/kernel/spec-core-fpga.c b/software/kernel/spec-core-fpga.c
+index 480bf05..b878f75 100644
+--- a/software/kernel/spec-core-fpga.c
++++ b/software/kernel/spec-core-fpga.c
+@@ -140,6 +140,11 @@ static int spec_fpga_dbg_init(struct spec_fpga *spec_fpga)
+ 	spec_fpga->dbg_csr_reg.regs = spec_fpga_debugfs_reg32;
+ 	spec_fpga->dbg_csr_reg.nregs = ARRAY_SIZE(spec_fpga_debugfs_reg32);
+ 	spec_fpga->dbg_csr_reg.base = spec_fpga->fpga;
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++	debugfs_create_regset32(SPEC_DBG_CSR_NAME, 0200,
++						     spec_fpga->dbg_dir_fpga,
++						     &spec_fpga->dbg_csr_reg);
++#else
+ 	spec_fpga->dbg_csr = debugfs_create_regset32(SPEC_DBG_CSR_NAME, 0200,
+ 						spec_fpga->dbg_dir_fpga,
+ 						&spec_fpga->dbg_csr_reg);
+@@ -150,6 +155,7 @@ static int spec_fpga_dbg_init(struct spec_fpga *spec_fpga)
+ 			SPEC_DBG_CSR_NAME, err);
+ 		goto err;
+ 	}
++#endif
+ 
+ 	spec_fpga->dbg_bld = debugfs_create_file(SPEC_DBG_BLD_INFO_NAME,
+ 						 0444,
+diff --git a/software/kernel/spec-gn412x-dma.c b/software/kernel/spec-gn412x-dma.c
+index ead355c..10bd54f 100644
+--- a/software/kernel/spec-gn412x-dma.c
++++ b/software/kernel/spec-gn412x-dma.c
+@@ -679,7 +679,10 @@ static irqreturn_t gn412x_dma_irq_handler(int irq, void *arg)
+ 
+ static int gn412x_dma_dbg_init(struct gn412x_dma_device *gn412x_dma)
+ {
+-	struct dentry *dir, *file;
++	struct dentry *dir;
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
++	struct dentry *file;
++#endif
+ 	int err;
+ 
+ 	dir = debugfs_create_dir(dev_name(&gn412x_dma->pdev->dev), NULL);
+@@ -694,6 +697,10 @@ static int gn412x_dma_dbg_init(struct gn412x_dma_device *gn412x_dma)
+ 	gn412x_dma->dbg_reg32.regs = gn412x_dma_debugfs_reg32;
+ 	gn412x_dma->dbg_reg32.nregs = ARRAY_SIZE(gn412x_dma_debugfs_reg32);
+ 	gn412x_dma->dbg_reg32.base = gn412x_dma->addr;
++#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
++	debugfs_create_regset32(GN412X_DMA_DBG_REG_NAME, 0200,
++				       dir, &gn412x_dma->dbg_reg32);
++#else
+ 	file = debugfs_create_regset32(GN412X_DMA_DBG_REG_NAME, 0200,
+ 				       dir, &gn412x_dma->dbg_reg32);
+ 	if (IS_ERR_OR_NULL(file)) {
+@@ -703,13 +710,16 @@ static int gn412x_dma_dbg_init(struct gn412x_dma_device *gn412x_dma)
+ 			 GN412X_DMA_DBG_REG_NAME, err);
+ 		goto err_reg32;
+ 	}
++	gn412x_dma->dbg_reg = file;
++#endif
+ 
+ 	gn412x_dma->dbg_dir = dir;
+-	gn412x_dma->dbg_reg = file;
+ 	return 0;
+ 
++#if KERNEL_VERSION(5, 6, 0) > LINUX_VERSION_CODE
+ err_reg32:
+ 	debugfs_remove_recursive(dir);
++#endif
+ err_dir:
+ 	return err;
+ }
-- 
2.27.0

